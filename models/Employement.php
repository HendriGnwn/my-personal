<?php

namespace app\models;

use app\helpers\StringHelper;
use yii\helpers\Html;

/**
 * This is the model class for table "employement".
 *
 * @property integer $id
 * @property string $name
 * @property string $company
 * @property string $description
 * @property string $url
 * @property string $start_date
 * @property string $end_date
 * @property integer $employement_status
 * @property integer $status
 * @property integer $order
 * @property string $created_at
 * @property integer $created_by
 * @property string $updated_at
 * @property integer $updated_by
 */
class Employement extends BaseActiveRecord
{
    /**
     * @inheritdoc
     */
    public static function tableName()
    {
        return 'employement';
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            [['name', 'description', 'url', 'start_date'], 'required'],
            [['id', 'employement_status', 'status', 'created_by', 'updated_by', 'order'], 'integer'],
            [['description'], 'string'],
            [['company', 'start_date', 'end_date', 'created_at', 'updated_at'], 'safe'],
            [['name'], 'string', 'max' => 100],
            [['url'], 'string', 'max' => 150],
            [['employement_status', 'status'], 'default', 'value'=>self::STATUS_ACTIVE],
			['order', 'default', 'value'=> 0]
        ];
    }

    public function beforeSave($insert)
    {
        if(!empty($this->end_date)) {
            $this->employement_status = self::STATUS_NON_ACTIVE;
        }
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Name',
            'description' => 'Description',
            'url' => 'Url',
            'start_date' => 'Start Date',
            'end_date' => 'End Date',
            'employement_status' => 'Employement Status',
            'status' => 'Status',
            'created_at' => 'Created At',
            'created_by' => 'Created By',
            'updated_at' => 'Updated At',
            'updated_by' => 'Updated By',
        ];
    }

    public function getEmployementStatusWithStyle()
    {
        switch($this->employement_status) {
            case self::STATUS_ACTIVE: return Html::label(self::statusLabels()[$this->employement_status], null, ['class'=>'label label-success']);
            case self::STATUS_NON_ACTIVE: return Html::label(self::statusLabels()[$this->employement_status], null, ['class'=>'label label-danger']);
        }
    }
	
	public function isCompany()
	{
		return $this->company != null || $this->company != '';
	}
	
	public function isActiveEmployementStatus()
	{
		return $this->employement_status == self::STATUS_ACTIVE;
	}
	
	public function getDateRange()
	{
		$startDate = StringHelper::formatDate($this->start_date, 'Y');
				
		if(empty($this->end_date) || $this->end_date=='') {
			return $startDate.' - NOW';
		}
		
		$endDate = StringHelper::formatDate($this->end_date, 'Y');
		return $startDate .' - '. $endDate;
	}
}
